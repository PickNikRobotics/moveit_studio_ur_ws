# Docker Compose file for user overlays of the MoveIt Pro images.

services:
  # Sets common properties for other services. Should not be instantiated directly.
  base:
    # Extend the installed MoveIt Pro docker compose file.
    # Change this to match your environment, if MoveIt Pro was installed to a different location.
    extends:
      file: /opt/moveit_pro/docker-compose.yaml
      service: base
    image: moveit-pro-overlay
    build:
      context: .
      target: user-overlay
      args:
        - USER_UID=${STUDIO_USER_UID:-1000}
        - USER_GID=${STUDIO_USER_UID:-1000}
        - USERNAME=${STUDIO_USERNAME:-studio-user}
        - MOVEIT_STUDIO_BASE_IMAGE=picknikciuser/moveit-studio:${STUDIO_DOCKER_TAG:-main}

  # Starts the MoveIt Pro Agent and the Bridge between the Agent and the Web UI
  agent_bridge:
    extends: base
    privileged: true
    # Allow the user to use the host's network video4linux and usb_device devices.
    # "c 81:* rmw": This rule specifies that the container has read, write, and mknod access (rmw) to all character devices (c) with a major number of 81 (video4linux).
    # "c 189:* rmw": This rule gives the container read, write, and mknod access (rmw) to all character devices (c) with a major number of 189 (usb_device).
    # Not sure why I got errors from this line...
    # device_cgroup_rules:
    #   - "c 81:* rmw"
    #   - "c 189:* rmw"
    depends_on:
      rest_api:
        condition: service_healthy
    volumes:
      # Allow the user to run graphical programs from within the docker container.
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      # Allow access to host hardware e.g. RealSense cameras
      - /dev:/dev
    deploy:
      restart_policy:
        condition: any
        delay: 2s
    command: agent_bridge.app

  # Starts the REST API for the Web UI.
  rest_api:
    extends: base
    healthcheck:
      test: "curl -f http://localhost:3200/objectives"
      interval: 5s
      timeout: 1m
    command: rest_api.app

  # Starts the robot drivers.
  drivers:
    extends: base
    privileged: true
    # Ensures the drivers container has RT priority
    ulimits:
      rtprio: 99
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"  # Allow access to the gripper.
    command: robot.app

  # Starts the web UI frontend.
  web_ui:
    image: picknikciuser/moveit-studio-frontend:${STUDIO_DOCKER_TAG:-main}
    ports:
      - "80:80"
    network_mode: host

  # Starts RViz for visualization.
  rviz:
    extends: base
    profiles:
      - rviz
    command: bash -c "ros2 launch moveit_studio_agent developer_rviz.launch.py"

  # Starts MoveIt Setup Assistant for creating MoveIt configurations.
  setup_assistant:
    extends: base
    profiles:
      - setup_assistant
    command: bash -c "ros2 launch moveit_setup_assistant setup_assistant.launch.py"

  # Developer specific configuration
  dev:
    extends: base
    build:
      target: user-overlay-dev
    image: moveit-studio-overlay-dev
    stdin_open: true
    tty: true
    privileged: true
    volumes:
      # Don't mount the source code or colcon generated artifacts, just ccache (or maybe not even that?)
      - ./.ccache/:/home/${STUDIO_USERNAME:-studio-user}/.ccache:rw
      - ${HOME}/.ros/log_moveit_pro:/home/${STUDIO_USERNAME:-studio-user}/.ros/log
      # Allow access to host hardware e.g. RealSense cameras
      - /dev:/dev
    command: sleep infinity
    # Making a separate profile prevents this service from being built when using `docker compose build`
    # and launched when using `docker compose up`.
    profiles: ["dev"]
  deploy:
    # Extend the installed MoveIt Pro docker compose file.
    # Change this to match your environment, if MoveIt Pro was installed to a different location.
    extends:
      file: /opt/moveit_pro/docker-compose.yaml
      service: base
    image: moveit-pro-deploy
    build:
      context: .
      target: deploy
      args:
        - USER_UID=${STUDIO_USER_UID:-1000}
        - USER_GID=${STUDIO_USER_UID:-1000}
        - USERNAME=${STUDIO_USERNAME:-studio-user}
        - MOVEIT_STUDIO_BASE_IMAGE=picknikciuser/moveit-studio:${STUDIO_DOCKER_TAG:-main}

    environment:
      - STUDIO_USERNAME=${STUDIO_USERNAME}
      - STUDIO_USER_UID=${STUDIO_USER_UID}
      - STUDIO_USER_GID=${STUDIO_USER_GID}
    command: /bin/bash

volumes:
  ignition_resources:
