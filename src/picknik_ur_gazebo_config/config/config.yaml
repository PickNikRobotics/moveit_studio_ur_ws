#
#  This contains information for a unique instance of a robot.
#

# Optional parameters that can be read in your launch files for specific functionality
optional_feature_params:
  gazebo_world_name: "space_station_blocks_world.sdf"
  gazebo_gui: False
  gazebo_verbose: True

# Enable simulation time so nodes are synced with the Gazebo block.
ros_global_params:
  use_sim_time: True

hardware:
  # Used by the ur_description package to set kinematics and geometry for a specific robot type.
  # You can change this to another UR model but you must update any configuration affected by the different arm size
  # UR models in the ur_description package are ur3, ur3e, ur5, ur5e, ur10, ur10e, and ur16e.
  type: "ur5e"

  # This is the only option for this site_config
  simulated: True

  # Gazebo starts its own controller manager through the ros2_control plugin, so set this to False
  launch_control_node: False

  # If the MoveIt Pro Agent should launch the robot state publisher
  # This should be false if you are launching the robot state publisher as part of drivers.
  launch_robot_state_publisher: True

  # If the MoveIt Pro Agent should launch cameras when simulated.
  launch_cameras_when_simulated: True

  # The robot's IP address
  ip: "0.0.0.0"

  # The following launch file is started when hardware.simulated is True
  simulated_hardware_launch_file:
    package: "picknik_ur_gazebo_config"
    path: "launch/sim/hardware_sim.launch.py"

  # Override other parameters from the base config package, including
  # the camera configuration and the robot description model.
  camera_config_file:
    package: "picknik_ur_gazebo_config"
    path: "config/cameras.yaml"
  robot_description:
    urdf:
      package: "picknik_ur_gazebo_config"
      path: "description/picknik_ur_gazebo.xacro"
    srdf:
      package: "picknik_ur_gazebo_config"
      path: "config/moveit/picknik_ur_gazebo.srdf.xacro"
    urdf_params:
      - name: "%>> hardware.type"
      - gripper_name: "robotiq_85"
      # Using the ogre renderer as it is compatible with most host hardware.
      # ogre2 (which is the Gazebo default) is also an option if your system supports it.
      - gazebo_renderer: ${GAZEBO_RENDERER:-ogre}
      - kinematics_parameters_file:
          package: "ur_description"
          path: "config"
      - physical_parameters_file:
          package: "ur_description"
          path: "config"
      - visual_parameters_file:
          package: "ur_description"
          path: "config"

# Override MoveIt parameters
moveit_params:
  sensors_3d:
    package: "picknik_ur_gazebo_config"
    path: "config/moveit/sensors_3d.yaml"
  servo:
    package: "picknik_ur_gazebo_config"
    path: "config/moveit/ur_servo.yaml"

octomap_manager:
  # Input point cloud topic name. The *output* point cloud topic published by
  # the Octomap manager node is defined in sensors_3d.yaml.
  input_point_cloud_topic: "/wrist_mounted_camera/depth/color/points"

# This configures what controllers gets run at startup
ros2_control:
  controllers_active_at_startup:
    - "joint_state_broadcaster"
    - "streaming_controller"
    - "robotiq_gripper_controller"
  controllers_inactive_at_startup:
    - "joint_trajectory_controller"
    - "servo_controller"

objectives:
  # Override with a new set of waypoints based on the Gazebo world.
  waypoints_file:
    package_name: "picknik_ur_gazebo_config"
    relative_path: "waypoints/waypoints.yaml"
  # Add new simulation Objectives in addition to the one in the base config package.
  objective_library_paths:
    sim:
      package_name: "picknik_ur_gazebo_config"
      relative_path: "objectives"
