#
#  This contains information for a unique instance of a robot.
#

# Name of the package to specialize
based_on_package: "picknik_ur_multi_arm_config"

# Optional parameters that can be read in your launch files for specific functionality
optional_feature_params:
  gazebo_world_name: "space_station_blocks_world.sdf"
  gazebo_gui: False
  gazebo_verbose: True

hardware:
  # Used by the ur_description package to set kinematics and geometry for a specific robot type.
  # You can change this to another UR model but you must update any configuration affected by the different arm size
  # UR models in the ur_description package are ur3, ur3e, ur5, ur5e, ur10, ur10e, and ur16e.
  type: "ur5e"

  # This is the only option for this site_config
  simulated: True

  # Gazebo starts its own controller manager through the ros2_control plugin, so set this to False
  launch_control_node: False

  # If the MoveIt Pro Agent should launch the robot state publisher
  # This should be false if you are launching the robot state publisher as part of drivers.
  launch_robot_state_publisher: True

  # If the MoveIt Pro Agent should launch cameras when simulated.
  launch_cameras_when_simulated: True

  # The robot's IP address
  ip: "0.0.0.0"


  simulated_hardware_launch_file:
    package: "picknik_ur_multi_arm_gazebo_config"
    path: "launch/sim/hardware_sim.launch.py"

  # Override other parameters from the base config package, including
  # the camera configuration and the robot description model.
  camera_config_file:
    package: "picknik_ur_multi_arm_gazebo_config"
    path: "config/cameras.yaml"
  robot_description:
    urdf:
      package: "picknik_ur_multi_arm_gazebo_config"
      path: "description/dual_arm_ur.xacro"
    srdf:
      package: "picknik_ur_multi_arm_gazebo_config"
      path: "config/moveit/dual_arm_ur.srdf"
    # Specify any additional parameters required for the URDF.
    # Many of these are specific to the UR descriptions packages, and can be customized as needed.
    # [Optional]
    urdf_params:
      - name: "dual_arm_ur"
      - prefix: ""
      - use_fake_hardware: "false"
      - gripper_name: "robotiq_85"
      - use_pinch_links: "true"
      - simulation: "gazebo"
      # Using the ogre renderer as it is compatible with most host hardware.
      # ogre2 (which is the Gazebo default) is also an option if your system supports it.
      - gazebo_renderer: ${GAZEBO_RENDERER:-ogre}
      - fake_sensor_commands: "false"
      - headless_mode: "true"
      - robot_ip: "%>> hardware.ip"
      - kinematics_parameters_file:
      # Load default_kinematics.yaml from ur_description/config/<ur_type>
          package: "ur_description"
          path: "config/%>> hardware.type <<%/default_kinematics.yaml"
      - physical_parameters_file:
      # Load physical_parameters.yaml from ur_description/config/<ur_type>
          package: "ur_description"
          path: "config/%>> hardware.type <<%/physical_parameters.yaml"
      - visual_parameters_file:
      # Load visual_parameters.yaml from ur_description/config/<ur_type>
          package: "ur_description"
          path: "config/%>> hardware.type <<%/visual_parameters.yaml"

# Sets ROS global params for launch.
# [Optional]
ros_global_params:
  # Whether or not to use simulated time.
  # [Optional, default=False]
  use_sim_time: True

# Configuration files for MoveIt.
# For more information, refer to https://moveit.picknik.ai/main/doc/how_to_guides/moveit_configuration/moveit_configuration_tutorial.html
# [Required]
moveit_params:
  sensors_3d:
    package: "picknik_ur_multi_arm_gazebo_config"
    path: "config/moveit/sensors_3d.yaml"
  servo:
    package: "picknik_ur_multi_arm_gazebo_config"
    path: "config/moveit/ur_servo.yaml"

octomap_manager:
  # Input point cloud topic name. The *output* point cloud topic published by
  # the Octomap manager node is defined in sensors_3d.yaml.
  input_point_cloud_topic: "/left_wrist_mounted_camera/depth/color/points"

# This configures what controllers gets run at startup
ros2_control:
  controllers_active_at_startup:
    - "joint_state_broadcaster"
    - "left_servo_controller"
    - "right_servo_controller"
    - "servo_controller"
    - "left_robotiq_gripper_controller"
    - "right_robotiq_gripper_controller"
  # Load but do not start these controllers so they can be activated later if needed.
  # [Optional, default=[]]
  controllers_inactive_at_startup:
    - "left_joint_trajectory_controller"
    - "right_joint_trajectory_controller"
    - "dual_arm_joint_trajectory_controller"
  # Any controllers here will not be spawned by MoveIt Pro.
  # # [Optional, default=[]]
  # controllers_not_managed: []
  # # Optionally configure remapping rules to let multiple controllers receive commands on the same topic.
  # # [Optional, default=[]]
  # controller_shared_topics: []


objectives:
  # Override with a new set of waypoints based on the Gazebo world.
  waypoints_file:
    package_name: "picknik_ur_multi_arm_gazebo_config"
    relative_path: "waypoints/waypoints.yaml"
  # Add new simulation Objectives in addition to the one in the base config package.
  objective_library_paths:
    sim:
      package_name: "picknik_ur_multi_arm_gazebo_config"
      relative_path: "objectives"
