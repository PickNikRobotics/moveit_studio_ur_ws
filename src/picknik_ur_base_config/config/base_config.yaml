###############################################################
#
#  This configures the robot to work with moveit studio
#
###############################################################

hardware:
  # Used by the ur_description package to set kinematics and geometry for a specific robot type.
  # You can change this to another UR model but you must update any configuration affected by the different arm size.
  # UR models in the ur_description package are ur3, ur3e, ur5, ur5e, ur10, ur10e, and ur16e
  type: ${UR_HARDWARE_TYPE:-ur5e}
  # Set simulated to false if you are using this as a configuration for real hardware
  simulated: True

  # If MoveIt Studio should launch the ros2 controller node
  launch_control_node: True

  # If MoveIt Studio should launch the robot state publisher
  launch_robot_state_publisher: True

  # The robot's IP address
  ip: "0.0.0.0"

  # Specify additional launch file for running the robot with real hardware.
  robot_driver_persist_launch_file:
    package: "picknik_ur_base_config"
    path: "launch/robot_drivers_to_persist.launch.py"
  robot_driver_restart_launch_file:
    package: "picknik_ur_base_config"
    path: "launch/robot_drivers_to_restart.launch.py"
  hardware_launch_file:
    package: "picknik_ur_base_config"
    path: "launch/hardware.launch.py"

  # Specify any additional launch file for running the robot in simulation mode.
  # Used when simulated is True.
  simulated_robot_driver_persist_launch_file:
    package: "picknik_ur_base_config"
    path: "launch/sim/robot_drivers_to_persist_sim.launch.py"
  simulated_robot_driver_restart_launch_file:
    package: "picknik_ur_base_config"
    path: "launch/sim/robot_drivers_to_restart_sim.launch.py"
  simulated_hardware_launch_file:
    package: "picknik_ur_base_config"
    path: "launch/sim/hardware_sim.launch.py"

  # Configuration details for cameras
  camera_config_file:
    package: "picknik_ur_base_config"
    path: "config/cameras.yaml"

  # Parameters used to configure the robot description through XACRO
  # A URDF and SRDF are both required.
  robot_description:
    urdf:
      package: "picknik_ur_base_config"
      path: "description/picknik_ur5e.xacro"
    srdf:
      package: "picknik_ur_base_config"
      path: "config/moveit/picknik_ur5e.srdf"
    # Specify any additional parameters required for the URDF
    urdf_params:
      - name: "%>> hardware.type"
      - prefix: ""
      - use_fake_hardware: "%>> hardware.simulated"
      - fake_sensor_commands: "false"
      - headless_mode: "true"
      - robot_ip: "%>> hardware.ip"
      - joint_limits_parameters_file:
          package: "picknik_ur_base_config"
          path: "config/moveit/joint_limits.yaml"
      # The following files are loaded based on the ur_description package layout.
      # To use parameters from a different package, place them in a config/ROBOT_NAME/ directory, replacing ROBOT_NAME with the value used for hardware.type in this file
      - kinematics_parameters_file:
      # Load default_kinematics.yaml from ur_description/config/ur5e
          package: "ur_description"
          path: "config"
      - physical_parameters_file:
      # Load physical_parameters.yaml from ur_description/config/ur5e
          package: "ur_description"
          path: "config"
      - visual_parameters_file:
      # Load visual_parameters.yaml from ur_description/config/ur5e
          package: "ur_description"
          path: "config"

# Sets ROS global params for launch
ros_global_params:
  use_sim_time: False

# Enable/disable optional features in MoveIt Studio
optional_feature_params:
  # Optionally use the Formant bridge for over-the-internet comms
  use_formant_bridge: False

# Configuration files for MoveIt
moveit_params:
  joint_group_name: "manipulator"

  ompl_planning:
    package: "picknik_ur_base_config"
    path: "config/moveit/ompl_planning.yaml"
  kinematics:
    package: "picknik_ur_base_config"
    path: "config/moveit/pick_ik_kinematics.yaml"
  servo:
    package: "picknik_ur_base_config"
    path: "config/moveit/ur5e_servo.yaml"
  sensors_3d:
    package: "picknik_ur_base_config"
    path: "config/moveit/sensors_3d.yaml"
  servo_kinematics:
    package: "picknik_ur_base_config"
    path: "config/moveit/pick_ik_kinematics_servo.yaml"
  joint_limits:
    package: "picknik_ur_base_config"
    path: "config/moveit/joint_limits.yaml"
  pilz_cartesian_limits:
    package: "picknik_ur_base_config"
    path: "config/moveit/pilz_cartesian_limits.yaml"

  publish:
    planning_scene: True
    geometry_updates: True
    state_updates: True
    transforms_updates: True

  trajectory_execution:
    manage_controllers: True
    allowed_execution_duration_scaling: 2.0
    allowed_goal_duration_margin: 5.0
    allowed_start_tolerance: 0.01

# This sets which frame ID to use when controlling the robot via the Endpoint tab in the UI
ui_params:
  servo_endpoint_frame_id: "manual_grasp_link"

# This configures what controllers gets run at startup
ros2_control:
  config:
    package: "picknik_ur_base_config"
    path: "config/control/picknik_ur5e.ros2_control.yaml"
  # MoveIt Studio will load and activate these controllers at start up to ensure they are available
  controllers_active_at_startup:
    - "force_torque_sensor_broadcaster"
    - "robotiq_gripper_controller"
    - "joint_state_broadcaster"
    - "streaming_controller"
    - "io_and_status_controller"
    - "robotiq_activation_controller"
  # Load but do not start these controllers so they can be activated later if needed.
  controllers_inactive_at_startup:
    - "joint_trajectory_controller"
  # Any controllers here will not be spawned by MoveIt Studio
  controllers_not_managed: []
  # Optionally configure remapping rules to let multiple controllers receive commands on the same topic.
  controller_shared_topics: []

# Octomap manager configuration parameters
octomap_manager:
  # Input point cloud topic name. The *output* point cloud topic published by
  # the Octomap manager node is defined in sensors_3d.yaml.
  input_point_cloud_topic: "/wrist_mounted_camera/depth/color/points"

# Configuration for loading objectives. Add additional plugin loaders as needed.
objectives:
  # List of plugins for loading custom behaviors.
  behavior_loader_plugins:
    core:
      - "moveit_studio::behaviors::CoreBehaviorsLoader"
  # Specify source folder for objectives
  objective_library_paths:
    core:
      package_name: "picknik_ur_base_config"
      relative_path: "objectives"
  waypoints_file:
    package_name: "picknik_ur_base_config"
    relative_path: "waypoints/ur5e_waypoints.yaml"
