<?xml version='1.0' encoding='UTF-8'?>
<root BTCPP_format="4" main_tree_to_execute="Open Cabinet Door">
  <BehaviorTree ID="Open Cabinet Door" _description="Open a cabinet door by grasping and pulling its handle">
    <Control ID="Sequence" name="Setup">
      <!--Load the parameters needed for this Objective-->
      <Action ID="LoadObjectiveParameters" config_file_name="open_door_fixed_handle_MTC_config.yaml" parameters="{parameters}"/>
      <!--Update the admittance controller and reset the FTS-->
      <SubTree ID="Re-Zero Force-Torque Sensors" _collapsed="false"/>
      <SubTree ID="Update Admittance Controller" _collapsed="false"/>
      <!--Get Poses from User-->
      <SubTree ID="Take Snapshot" _collapsed="false" point_cloud="{point_cloud}"/>
      <Action ID="GetPointsFromUser" pixel_coords="{pixel_coords}" view_name="/camera/wrist_mounted_camera/color/image_raw" point_prompts="Click Handle" point_names="grasp_click"/>
      <Action ID="GetPoseFromPixelCoords" output_poses="{grasp_poses}" neighbor_radius="0.100000" pixel_coords="{pixel_coords}" downsample_fraction="0.100000" point_cloud="{point_cloud}"/>
      <Action ID="GetPointsFromUser" pixel_coords="{pixel_coords}" view_name="/camera/wrist_mounted_camera/color/image_raw" point_prompts="Click Hinge Start;Click Hinge End" point_names="hinge_axis_start;hinge_axis_end"/>
      <Action ID="GetPoseFromPixelCoords" output_poses="{hinge_axis_poses}" neighbor_radius="0.100000" pixel_coords="{pixel_coords}" downsample_fraction="0.100000" point_cloud="{point_cloud}"/>
      <Decorator ID="ForEachPoseStamped" out="{pose}" vector_in="{grasp_poses}">
        <Action ID="TransformPose" output_pose="{grasp_pose}" input_pose="{pose}" quaternion_xyzw="0.0;0.0;0.0;1.0" translation_xyz="0.0;0.0;0.0;"/>
      </Decorator>
      <!--Set up Subframes for MTC-->
      <Action ID="GetMoveAlongArcSubframes" target_grasp_pose="{grasp_pose}" move_along_arc_subframes="{move_along_arc_subframes}" hinge_axis_poses="{hinge_axis_poses}"/>
      <Action ID="CreateGraspableObject" object_id="cabinet_door" generate_top_face="true" generate_front_face="true" generate_side_faces="true" cuboid_object="{door_object}" pose="{pose}" dy="0.100000" dx="0.100000" dz="0.100000"/>
      <!--Add the subframes to the Object-->
      <Decorator ID="ForEachObjectSubframe" vector_in="{move_along_arc_subframes}" out="{subframe}">
        <Action ID="AddSubframeToObject" subframe="{subframe}" graspable_object="{door_object}"/>
      </Decorator>
      <!--Open Gripper and begin MTC-->
      <Action ID="MoveGripperAction" gripper_command_action_name="/robotiq_gripper_controller/gripper_cmd" position="0.0"/>
      <Control ID="Sequence" name="OpenDoorFixedHandleMTC">
        <Action ID="InitializeMTCTask" task_id="open_door_fixed_handle_user" controller_names="/joint_trajectory_controller /robotiq_gripper_controller" task="{open_door_fixed_handle_task}"/>
        <Action ID="SetupMTCCurrentState" task="{open_door_fixed_handle_task}"/>
        <Action ID="LoadObjectiveParameters" config_file_name="pick_place_object_config.yaml" parameters="{approach_parameters}"/>
        <Action ID="SetupMTCApproachGrasp" task="{open_door_fixed_handle_task}" monitored_stage="{monitored_stage}" target_object="{door_object}" parameters="{approach_parameters}"/>
        <Action ID="SetupMTCGraspThenMoveAlongArcPull" graspable_object="{door_object}" parameters="{parameters}" task="{open_door_fixed_handle_task}" monitored_stage="{monitored_stage}"/>
        <Action ID="PlanMTCTask" solution="{open_door_fixed_handle_solution}" task="{open_door_fixed_handle_task}"/>
        <SubTree ID="Wait for Trajectory Approval if User Available" solution="{open_door_fixed_handle_solution}" _collapsed="false"/>
        <!--Whether task execution succeeds or fails, reset the controllers to disable admittance control.-->
        <Control ID="IfThenElse" name="execute_and_reset_controllers">
          <!--IF task execution succeeds-->
          <Action ID="ExecuteMTCTask" solution="{open_door_fixed_handle_solution}"/>
          <!--THEN reset the controllers-->
          <Action ID="ActivateControllers" controller_names="/joint_trajectory_controller /robotiq_gripper_controller"/>
          <!--ELSE reset the controllers and return failure-->
          <Control ID="Sequence">
            <Action ID="ActivateControllers" controller_names="/joint_trajectory_controller /robotiq_gripper_controller"/>
            <Action ID="AlwaysFailure"/>
          </Control>
        </Control>
      </Control>
    </Control>
  </BehaviorTree>
</root>
